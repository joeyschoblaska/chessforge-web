define("chessforge/app",["ember","ember/resolver","ember/load-initializers","chessforge/config/environment","exports"],function(e,t,s,n,a){"use strict";var r,o=e["default"],i=t["default"],h=s["default"],l=n["default"];o.MODEL_FACTORY_INJECTIONS=!0,r=o.Application.extend({modulePrefix:l.modulePrefix,podModulePrefix:l.podModulePrefix,Resolver:i}),h(r,l.modulePrefix),a["default"]=r}),define("chessforge/components/chess-board",["ember","exports"],function(e,t){"use strict";var s,n=e["default"];s=n.Component.extend({didInsertElement:function(){return this.game=new Chess(Fen.fromPrint(this.get("fenPrint"))),this.board=new ChessBoard(this.$().attr("id"),{pieceTheme:"assets/images/chesspieces/alpha/{piece}.png",position:this.get("fenPrint"),draggable:!0,showNotation:!1,moveSpeed:1,onDragStart:function(e){return function(t,s){return!(e.game.game_over()||"w"===e.game.turn()&&-1!==s.search(/^b/)||"b"===e.game.turn()&&-1!==s.search(/^w/))}}(this),onDrop:function(e){return function(t,s){var n;return n=e.game.move({from:t,to:s,promotion:"q"}),null===n?"snapback":(e.movedFen=Fen.toPrint(e.game.fen()),e.moveToMake=n)}}(this),onSnapEnd:function(e){return function(){return e.board.position(e.game.fen(),!1),e.moveToMake&&e.sendAction("makeMove",e.moveToMake.san),e.moveToMake=null}}(this)}),this._attachResizeListener()},_fenChanged:function(){return this.get("fenPrint")!==this.movedFen&&(this.board.position(this.get("fenPrint")),this.game.load(Fen.fromPrint(this.get("fenPrint")))),this.movedFen=null}.observes("fenPrint"),_attachResizeListener:function(){return $(window).resize(function(e){return function(){return e.board.resize()}}(this))}}),t["default"]=s}),define("chessforge/components/results-bar",["ember","exports"],function(e,t){"use strict";var s,n=e["default"];s=n.Component.extend({didInsertElement:function(){var e,t,s;return s=Math.round(100*this.get("white")/this.get("total")),0===this.get("draw")?(e=100-s,t=0):(e=Math.round(100*this.get("black")/this.get("total")),t=100-s-e),this.set("white",s),this.set("black",e),this.set("draw",t),this.$(".progress-bar-white").css("width",s+"%"),this.$(".progress-bar-black").css("width",e+"%"),this.$(".progress-bar-draw").css("width",t+"%"),15>s&&this.$(".progress-bar-white").html(""),15>e&&this.$(".progress-bar-black").html(""),15>t&&this.$(".progress-bar-draw").html(""),e>0?this.$(".progress").css("background-color","black"):t>0?this.$(".progress").css("background-color","gray"):void 0}}),t["default"]=s}),define("chessforge/controllers/opening-explorer",["ember","exports"],function(e,t){"use strict";var s,n=e["default"];s=n.Controller.extend({updateNextMoves:function(){var e;return e=this.get("fenPrint"),n.$.getJSON(""+EmberENV.API_URL+"/positions/"+Fen.encode(e)+"/next_moves?game_set_id="+this.get("gamesetID"),function(t){return function(s){return t.get("fenPrint")===e?t.set("nextMoves",s.next_moves):void 0}}(this))}.observes("fenPrint","gamesetID"),updateFenPrint:function(){var e,t,s,n,a;for(e=new Chess,s=this.get("moves").slice(0,this.get("ply")),n=0,a=s.length;a>n;n++)t=s[n],e.move(t);return this.set("fenPrint",Fen.toPrint(e.fen()))}.observes("ply","moves").on("init"),noNextMoves:function(){return 0===this.get("nextMoves").length}.property("nextMoves"),anyContinuations:function(){return this.get("continuations").length>0}.property("continuations"),updateOpenings:function(){var e;return e=Openings.forMovesAndPly(this.get("moves"),this.get("ply")),this.set("openings",e.openings),this.set("continuations",e.continuations)}.observes("ply","moves"),gameSets:[{name:"FICS 2000+",id:1},{name:"FICS 1600-2000",id:2},{name:"FICS Under 1600",id:3}],movesForDisplay:function(){var e;return e=this.get("ply"),this.get("moves").map(function(t,s){var n,a,r;return r=s+1,a=r%2===0?"":""+(r+1)/2+".",n=e>r?"past-ply":e===r?"present-ply":"future-ply",{algWithMoveMarker:""+a+t,ply:r,displayClass:n}})}.property("moves.length","ply"),zeroPlyClass:function(){return 0===this.get("ply")?"present-ply":"past-ply"}.property("ply"),queryParams:["ply","moves"],ply:0,fenPrint:null,gamesetID:1,moves:[],nextMoves:[],openings:[],actions:{makeMove:function(e){var t;return this.get("moves")[this.get("ply")]!==e&&(t=this.get("moves").slice(0,this.get("ply")),t.push(e),this.set("moves",t)),this.set("ply",this.get("ply")+1)},goToSequence:function(e){return this.get("moves").slice(0,e.length).toString()!==e.toString()&&this.set("moves",e),this.set("ply",e.length)},goToPly:function(e){return 0===this.get("ply")&&0===e&&this.set("moves",[]),this.set("ply",e)},forwardPly:function(){return this.get("ply")>=this.get("moves").length?void 0:this.set("ply",this.get("ply")+1)},backPly:function(){return 0!==this.get("ply")?this.set("ply",this.get("ply")-1):void 0}}}),t["default"]=s}),define("chessforge/helpers/short-num",["ember","exports"],function(e,t){"use strict";var s,n,a=e["default"];n=function(e){return e>=1e8?Math.round(e/1e6)+"m":e>=1e6?Math.round(e/1e5)/10+"m":e>=1e5?Math.round(e/1e3)+"k":e>=1e3?Math.round(e/100)/10+"k":e},s=a.Handlebars.makeBoundHelper(n),t.shortNum=n,t["default"]=s}),define("chessforge/initializers/export-application-global",["ember","chessforge/config/environment","exports"],function(e,t,s){"use strict";function n(){var e=arguments[1]||arguments[0];if(r.exportApplicationGlobal!==!1){var t,s=r.exportApplicationGlobal;t="string"==typeof s?s:a.String.classify(r.modulePrefix),window[t]||(window[t]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[t]}}))}}var a=e["default"],r=t["default"];s.initialize=n,s["default"]={name:"export-application-global",initialize:n}}),define("chessforge/router",["ember","chessforge/config/environment","exports"],function(e,t,s){"use strict";var n,a=e["default"],r=t["default"];n=a.Router.extend({location:r.locationType}),n.map(function(){return this.route("opening-explorer",{path:"/openings/explorer"})}),s["default"]=n}),define("chessforge/routes/application",["ember","exports"],function(e,t){"use strict";var s,n=e["default"];s=n.Route.extend({beforeModel:function(){return this.transitionTo("/openings/explorer")}}),t["default"]=s}),define("chessforge/templates/application",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var o,i="";return r.buffer.push('<header>\n  <div class="container">\n    <div class="row">\n      <div class="col-md-12"> <div id="logo"></div> </div>\n    </div>\n  </div>\n</header>\n\n'),o=n._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push("\n"),i})}),define("chessforge/templates/components/results-bar",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var o,i="";return r.buffer.push('<div class="results-bar">\n  <div class="progress">\n    <div class="progress-bar progress-bar-white">\n      '),o=n._triageMustache.call(t,"white",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push('%\n    </div>\n    <div class="progress-bar progress-bar-draw">\n      '),o=n._triageMustache.call(t,"draw",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push('%\n    </div>\n    <div class="progress-bar progress-bar-black">\n      '),o=n._triageMustache.call(t,"black",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push("%\n    </div>\n  </div>\n</div>\n"),i})}),define("chessforge/templates/opening-explorer",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var o,i,h="",l=n.helperMissing,p=this.escapeExpression;return r.buffer.push('<div class="container">\n  <div class="row padded-row">\n    <div class="col-md-5 col-sm-6">\n      '),r.buffer.push(p((o=n["chess-board"]||t&&t["chess-board"],i={hash:{fenPrint:"fenPrint",makeMove:"makeMove"},hashTypes:{fenPrint:"ID",makeMove:"STRING"},hashContexts:{fenPrint:t,makeMove:t},contexts:[],types:[],data:r},o?o.call(t,i):l.call(t,"chess-board",i)))),r.buffer.push("\n      "),r.buffer.push(p((o=n.partial||t&&t.partial,i={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r},o?o.call(t,"opening-explorer/move-list",i):l.call(t,"partial","opening-explorer/move-list",i)))),r.buffer.push('\n    </div>\n\n    <div class="col-md-7 col-sm-6">\n      <div class="row">\n        <div class="col-md-7">\n          '),r.buffer.push(p((o=n.partial||t&&t.partial,i={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r},o?o.call(t,"opening-explorer/game_set_select",i):l.call(t,"partial","opening-explorer/game_set_select",i)))),r.buffer.push("\n          "),r.buffer.push(p((o=n.partial||t&&t.partial,i={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r},o?o.call(t,"opening-explorer/results_table",i):l.call(t,"partial","opening-explorer/results_table",i)))),r.buffer.push('\n        </div>\n\n        <div class="col-md-5">\n          '),r.buffer.push(p((o=n.partial||t&&t.partial,i={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r},o?o.call(t,"opening-explorer/matched_openings",i):l.call(t,"partial","opening-explorer/matched_openings",i)))),r.buffer.push("\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"),h})}),define("chessforge/templates/opening-explorer/game-set-select",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var o="",i=this.escapeExpression;return r.buffer.push('<form class="form-horizontal" id="game-set-select">\n  <div class="form-group form-group-sm">\n    <label class="col-xs-4 control-label" for="game-set">Game set:</label>\n    <div class="col-xs-8">\n      '),r.buffer.push(i(n.view.call(t,"select",{hash:{content:"gameSets",value:"gamesetID",optionValuePath:"content.id",optionLabelPath:"content.name","class":"form-control",id:"game-set"},hashTypes:{content:"ID",value:"ID",optionValuePath:"STRING",optionLabelPath:"STRING","class":"STRING",id:"STRING"},hashContexts:{content:t,value:t,optionValuePath:t,optionLabelPath:t,"class":t,id:t},contexts:[t],types:["STRING"],data:r}))),r.buffer.push("\n    </div>\n  </div>\n</form>\n"),o})}),define("chessforge/templates/opening-explorer/matched-openings",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){function o(e,t){var s,a="";return t.buffer.push("\n    <div "),t.buffer.push(u(n["bind-attr"].call(e,{hash:{"class":":matched-opening opening.active"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push('>\n      <div class="color-flag">\n        <div class="opening-title"><a  '),t.buffer.push(u(n.action.call(e,"goToSequence","opening.moves",{hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["STRING","ID"],data:t}))),t.buffer.push(">"),s=n._triageMustache.call(e,"opening.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push('</a></div>\n        <div class="opening-sequence">'),t.buffer.push(u(n._triageMustache.call(e,"opening.prettyMoves",{hash:{unescaped:"true"},hashTypes:{unescaped:"STRING"},hashContexts:{unescaped:e},contexts:[e],types:["ID"],data:t}))),t.buffer.push("</div>\n      </div>\n    </div>\n  "),a}function i(e,t){var s,a="";return t.buffer.push("\n    <h3>Continuations</h3>\n\n    "),s=n.each.call(e,"continuation","in","continuations",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(4,h,t),contexts:[e,e,e],types:["ID","ID","ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("\n  "),a}function h(e,t){var s,a="";return t.buffer.push('\n      <div class="matched-opening">\n        <div class="color-flag">\n          <div class="opening-title"><a '),t.buffer.push(u(n.action.call(e,"goToSequence","continuation.moves",{hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["STRING","ID"],data:t}))),t.buffer.push(">"),s=n._triageMustache.call(e,"continuation.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push('</a></div>\n          <div class="opening-sequence">'),t.buffer.push(u(n._triageMustache.call(e,"continuation.prettyMoves",{hash:{unescaped:"true"},hashTypes:{unescaped:"STRING"},hashContexts:{unescaped:e},contexts:[e],types:["ID"],data:t}))),t.buffer.push("</div>\n        </div>\n      </div>\n    "),a}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var l,p="",u=this.escapeExpression,c=this;return r.buffer.push('<div id="matched-openings">\n  '),l=n.each.call(t,"opening","in","openings",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,o,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("\n\n  "),l=n["if"].call(t,"anyContinuations",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(3,i,r),contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("\n</div>\n"),p})}),define("chessforge/templates/opening-explorer/move-list",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){function o(e,t){var s,a="";return t.buffer.push("\n  <span "),t.buffer.push(l(n["bind-attr"].call(e,{hash:{"class":"move.displayClass"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(" "),t.buffer.push(l(n.action.call(e,"goToPly","move.ply",{hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["STRING","ID"],data:t}))),t.buffer.push(">"),s=n._triageMustache.call(e,"move.algWithMoveMarker",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("</span>\n  "),a}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var i,h="",l=this.escapeExpression,p=this;return r.buffer.push('<div class="move-list">\n<span '),r.buffer.push(l(n["bind-attr"].call(t,{hash:{"class":"zeroPlyClass"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:r}))),r.buffer.push(" "),r.buffer.push(l(n.action.call(t,"goToPly",0,{hash:{},hashTypes:{},hashContexts:{},contexts:[t,t],types:["STRING","INTEGER"],data:r}))),r.buffer.push(">0</span>\n\n  "),i=n.each.call(t,"move","in","movesForDisplay",{hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(1,o,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n</div>\n"),h})}),define("chessforge/templates/opening-explorer/results-table",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){function o(e,t){var s,a,r,o="";return t.buffer.push('\n      <tr>\n        <td style="width: 1%"><a '),t.buffer.push(p(n.action.call(e,"makeMove","nextMove.algebraic",{hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["STRING","ID"],data:t}))),t.buffer.push(">"),s=n._triageMustache.call(e,"nextMove.algebraic",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push('</a></td>\n        <td style="width: 1%">'),t.buffer.push(p((a=n["short-num"]||e&&e["short-num"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"nextMove.total",r):u.call(e,"short-num","nextMove.total",r)))),t.buffer.push("</td>\n        <td>"),t.buffer.push(p((a=n["results-bar"]||e&&e["results-bar"],r={hash:{total:"nextMove.total",white:"nextMove.white_wins",black:"nextMove.black_wins",draw:"nextMove.draws"},hashTypes:{total:"ID",white:"ID",black:"ID",draw:"ID"},hashContexts:{total:e,white:e,black:e,draw:e},contexts:[],types:[],data:t},a?a.call(e,r):u.call(e,"results-bar",r)))),t.buffer.push("</td>\n      </tr>\n    "),o}function i(e,t){t.buffer.push('\n      <tr>\n        <td colspan="3" class="no-next-moves">no data for this position</td>\n      </tr>\n    ')}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var h,l="",p=this.escapeExpression,u=n.helperMissing,c=this;return r.buffer.push('<table class="table table-condensed position-results">\n  <thead>\n    <tr>\n      <th>Move</th>\n      <th>Games</th>\n      <th>White Wins / Draws / Black Wins</th>\n    </tr>\n  </thead>\n  <tbody>\n    '),h=n.each.call(t,"nextMove","in","nextMoves",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,o,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push("\n\n    "),h=n["if"].call(t,"noNextMoves",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(3,i,r),contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push("\n  </tbody>\n</table>\n"),l})}),define("chessforge/views/opening-explorer",["ember","exports"],function(e,t){"use strict";var s,n=e["default"];s=n.View.extend({didInsertElement:function(){return $(document).on("keydown",function(e){return function(t){return 39===t.keyCode&&e.controller.send("forwardPly"),37===t.keyCode?e.controller.send("backPly"):void 0}}(this))}}),t["default"]=s}),define("chessforge/config/environment",["ember"],function(e){var t="chessforge";try{var s=t+"/config/environment",n=e["default"].$('meta[name="'+s+'"]').attr("content"),a=JSON.parse(unescape(n));return{"default":a}}catch(r){throw new Error('Could not read config from meta tag with name "'+s+'".')}}),runningTests?require("chessforge/tests/test-helper"):require("chessforge/app")["default"].create({});